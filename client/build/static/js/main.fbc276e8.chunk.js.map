{"version":3,"sources":["themes/theme.ts","pages/Login/useStyles.ts","helpers/APICalls/login.ts","pages/Login/LoginForm/useStyles.ts","pages/Login/LoginForm/LoginForm.tsx","components/AuthHeader/useStyles.ts","components/AuthHeader/AuthHeader.tsx","helpers/APICalls/loginWithCookies.ts","helpers/APICalls/logout.ts","context/useAuthContext.tsx","context/useSnackbarContext.tsx","pages/Login/Login.tsx","pages/SignUp/useStyles.ts","helpers/APICalls/register.ts","pages/SignUp/SignUpForm/useStyles.ts","pages/SignUp/SignUpForm/SignUpForm.tsx","pages/SignUp/SignUp.tsx","pages/Dashboard/useStyles.ts","context/useSocketContext.tsx","components/ChatSideBanner/useStyles.ts","components/AvatarDisplay/AvatarDisplay.tsx","components/Search/useStyles.ts","helpers/APICalls/searchUsers.ts","components/Search/Search.tsx","components/AuthMenu/AuthMenu.tsx","components/ChatSideBanner/ChatSideBanner.tsx","pages/Dashboard/Dashboard.tsx","pages/Bookings/useStyles.ts","helpers/APICalls/requests.ts","components/RequestMenu/useStyles.ts","components/RequestMenu/RequestMenu.tsx","pages/Bookings/Bookings.tsx","App.tsx","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","fontSize","button","textTransform","fontWeight","palette","primary","main","secondary","shape","borderRadius","useStyles","makeStyles","root","minHeight","borderBottom","authWrapper","display","alignItems","minWidth","justifyContent","flexDirection","paddingTop","welcome","paddingBottom","color","textAlign","login","email","password","a","fetchOptions","method","headers","body","JSON","stringify","credentials","fetch","then","res","json","catch","error","message","form","width","marginTop","spacing","label","paddingLeft","inputs","height","padding","border","forgot","paddingRight","submit","backgroundColor","letterSpacing","demoSubmit","margin","Login","handleSubmit","classes","initialValues","validationSchema","Yup","required","max","min","onSubmit","handleChange","values","touched","errors","isSubmitting","className","noValidate","TextField","id","Typography","fullWidth","InputLabelProps","shrink","InputProps","input","disableUnderline","name","autoComplete","placeholder","autoFocus","helperText","Boolean","value","onChange","endAdornment","type","Box","Button","size","variant","CircularProgress","style","process","authHeader","alignSelf","flexWrap","accAside","marginRight","whiteSpace","link","textDecoration","AuthHeader","linkTo","asideText","btnText","p","to","loginWithCookies","logout","AuthContext","createContext","loggedInUser","undefined","updateLoginContext","AuthProvider","children","useState","setLoggedInUser","history","useHistory","useCallback","data","user","push","logoutAPI","console","useEffect","success","checkLoginWithCookies","Provider","useAuth","useContext","SnackBarContext","updateSnackBarMessage","SnackBarProvider","setMessage","open","setOpen","handleClose","snackbarHandleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","aria-label","onClick","useSnackBar","Grid","container","component","CssBaseline","item","xs","Paper","square","maxWidth","setSubmitting","register","username","SignUpForm","Register","dashboard","drawerWrapper","breakpoints","up","SocketContext","socket","initSocket","SocketProvider","setSocket","log","io","withCredentials","chatSideBanner","userPanel","marginBottom","userText","chatTitle","chatSummaryContainer","overflowY","newChatBtn","noChatToSelectText","AvatarDisplay","Avatar","alt","src","search","position","marginLeft","lineHeight","searchRoot","searchInput","searchIcon","pointerEvents","searchUsers","Search","options","setOptions","loading","setLoading","useDebounce","debouncedSearch","saveOptions","users","active","response","searchAndSaveUsers","e","preventDefault","Autocomplete","onOpen","getOptionSelected","option","getOptionLabel","onInputChange","inputValue","noOptionsText","freeSolo","renderInput","params","InputBase","inputProps","ref","startAdornment","AuthMenu","anchorEl","setAnchorEl","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","getContentAnchorEl","MenuItem","ChatSideBanner","setSearch","newChatUser","setNewChatUser","loggedIn","newInputValue","Dashboard","bookingsWrapper","bookingsList","bookingsCardNext","bookingsCardContainer","maxHeight","scrollableBox","bookingsCardItem","bookingsCardContent","iconSettings","fill","cursor","typographyCurrent","typographyPast","bookingsCalendar","calendarContainer","iconStatus","customSelectedDay","getRequests","updateReqs","reqId","status","accepted","RequestMenu","ind","eleId","setDateReqs","selectedDate","setNextReq","handleUpdate","nearestReq","find","ele","Date","start","getTime","focusable","evnt","Bookings","handleDateChange","Array","dateReqs","_id","sitterId","declined","dogType","end","paid","specialNotes","nextReq","direction","Card","elevation","CardContent","noWrap","toDateString","CardHeader","avatar","title","length","map","utils","DateFnsUtils","DatePicker","autoOk","disableToolbar","orientation","disabled","renderDay","day","selectedDay","currentMonth","DayComponent","days","stateDays","filter","el","renderDayCalendar","App","exact","path","Signup","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fbc276e8.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core';\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Open Sans\", \"sans-serif\", \"Roboto\"',\r\n    fontSize: 12,\r\n    button: {\r\n      textTransform: 'none',\r\n      fontWeight: 700,\r\n    },\r\n  },\r\n  palette: {\r\n    primary: { main: '#3A8DFF' },\r\n    secondary: { main: 'rgb(245, 20, 20)' },\r\n  },\r\n  shape: {\r\n    borderRadius: 5,\r\n  },\r\n});\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    minHeight: '100vh',\r\n    '& .MuiInput-underline:before': {\r\n      borderBottom: '1.2px solid rgba(0, 0, 0, 0.2)',\r\n    },\r\n  },\r\n  authWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    minWidth: '100vw',\r\n    minHeight: '100vh',\r\n    justifyContent: 'space-around',\r\n    flexDirection: 'column',\r\n    paddingTop: 23,\r\n  },\r\n  welcome: {\r\n    fontSize: 32,\r\n    paddingBottom: 20,\r\n    color: '#000000',\r\n    fontFamily: 'Poppins-Bold',\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { AuthApiData } from '../../interface/AuthApiData';\r\nimport { FetchOptions } from '../../interface/FetchOptions';\r\n\r\nconst login = async (email: string, password: string): Promise<AuthApiData> => {\r\n  const fetchOptions: FetchOptions = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ email, password }),\r\n    credentials: 'include',\r\n  };\r\n  return await fetch(`/auth/login`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: 'Unable to connect to server. Please try again' },\r\n    }));\r\n};\r\n\r\nexport default login;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n    paddingLeft: '5px',\r\n    textTransform: 'uppercase',\r\n    color: 'black',\r\n    fontFamily: 'Poppins-Bold',\r\n  },\r\n  inputs: {\r\n    marginTop: '.8rem',\r\n    height: '2rem',\r\n    padding: '5px',\r\n    fontFamily: 'Poppins-Regular',\r\n    border: '1px solid rgba(0,0,0,0.2)',\r\n    borderRadius: '5px',\r\n  },\r\n  forgot: {\r\n    paddingRight: 10,\r\n    color: '#3a8dff',\r\n    display: 'none',\r\n  },\r\n  submit: {\r\n    padding: 10,\r\n    width: 160,\r\n    height: 56,\r\n    borderRadius: theme.shape.borderRadius,\r\n    marginTop: 49,\r\n    fontSize: 14,\r\n    backgroundColor: 'rgb(240, 69, 69)',\r\n    color: 'white',\r\n    textTransform: 'uppercase',\r\n    fontFamily: 'Poppins-Regular',\r\n    letterSpacing: 1.1,\r\n  },\r\n  demoSubmit: {\r\n    margin: theme.spacing(3, 2, 2),\r\n    padding: 10,\r\n    width: 160,\r\n    height: 56,\r\n    borderRadius: theme.shape.borderRadius,\r\n    marginTop: 49,\r\n    fontSize: 14,\r\n    backgroundColor: 'rgb(240, 69, 69)',\r\n    color: 'white',\r\n    textTransform: 'uppercase',\r\n    fontFamily: 'Poppins-Regular',\r\n    letterSpacing: 1.1,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Formik, FormikHelpers } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './useStyles';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\ninterface Props {\r\n  handleSubmit: (\r\n    {\r\n      email,\r\n      password,\r\n    }: {\r\n      email: string;\r\n      password: string;\r\n    },\r\n    {\r\n      setStatus,\r\n      setSubmitting,\r\n    }: FormikHelpers<{\r\n      email: string;\r\n      password: string;\r\n    }>,\r\n  ) => void;\r\n}\r\n\r\nexport default function Login({ handleSubmit }: Props): JSX.Element {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          email: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string().required('Email is required').email('Email is not valid'),\r\n          password: Yup.string()\r\n            .required('Password is required')\r\n            .max(100, 'Password is too long')\r\n            .min(6, 'Password too short'),\r\n        })}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\r\n          <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n            <TextField\r\n              id=\"email\"\r\n              label={<Typography className={classes.label}>Email address</Typography>}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                classes: { input: classes.inputs },\r\n                disableUnderline: true,\r\n              }}\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              placeholder={'Your email'}\r\n              autoFocus\r\n              helperText={touched.email ? errors.email : ''}\r\n              error={touched.email && Boolean(errors.email)}\r\n              value={values.email}\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              id=\"password\"\r\n              label={<Typography className={classes.label}>Password</Typography>}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                classes: { input: classes.inputs },\r\n                disableUnderline: true,\r\n                endAdornment: <Typography className={classes.forgot}>Forgot?</Typography>,\r\n              }}\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              placeholder={'Your password'}\r\n              helperText={touched.password ? errors.password : ''}\r\n              error={touched.password && Boolean(errors.password)}\r\n              value={values.password}\r\n              onChange={handleChange}\r\n            />\r\n            <Box textAlign=\"center\">\r\n              <Button type=\"submit\" size=\"large\" variant=\"contained\" color=\"secondary\" className={classes.submit}>\r\n                {isSubmitting ? <CircularProgress style={{ color: 'white' }} /> : 'Login'}\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n      <Formik\r\n        initialValues={{\r\n          email: `${process.env.REACT_APP_DEMO_USER}`,\r\n          password: `${process.env.REACT_APP_DEMO_PW}`,\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ handleSubmit, isSubmitting }) => (\r\n          <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n            <Box textAlign=\"center\">\r\n              <Button type=\"submit\" size=\"large\" variant=\"contained\" color=\"secondary\" className={classes.demoSubmit}>\r\n                {isSubmitting ? <CircularProgress style={{ color: 'white' }} /> : 'Demo'}\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  authHeader: {\r\n    alignSelf: 'flex-end',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    fontFamily: 'Poppins-Bold',\r\n  },\r\n  accAside: {\r\n    fontSize: 13,\r\n    fontFamily: 'Poppins-Bold',\r\n    textAlign: 'center',\r\n    marginRight: 5,\r\n    whiteSpace: 'nowrap',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '1rem 0',\r\n  },\r\n  link: {\r\n    textDecoration: 'underlined',\r\n    color: 'rgb(240, 69, 69)',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Box from '@material-ui/core/Box';\r\nimport { Link } from 'react-router-dom';\r\nimport useStyles from './useStyles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\ninterface Props {\r\n  linkTo: string;\r\n  asideText: string;\r\n  btnText: string;\r\n}\r\n\r\nconst AuthHeader = ({ linkTo, asideText, btnText }: Props): JSX.Element => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box p={1} className={classes.authHeader}>\r\n      <Typography className={classes.accAside}>{asideText}</Typography>\r\n      <Link to={linkTo} className={classes.link}>\r\n        {btnText}\r\n      </Link>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AuthHeader;\r\n","import { AuthApiData } from '../../interface/AuthApiData';\r\nimport { FetchOptions } from '../../interface/FetchOptions';\r\n\r\nconst loginWithCookies = async (): Promise<AuthApiData> => {\r\n  const fetchOptions: FetchOptions = {\r\n    method: 'GET',\r\n    credentials: 'include',\r\n  };\r\n  return await fetch(`/auth/user`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: 'Unable to connect to server. Please try again' },\r\n    }));\r\n};\r\n\r\nexport default loginWithCookies;\r\n","import { AuthApiData } from '../../interface/AuthApiData';\r\nimport { FetchOptions } from '../../interface/FetchOptions';\r\n\r\nconst logout = async (): Promise<AuthApiData> => {\r\n  const fetchOptions: FetchOptions = {\r\n    method: 'GET',\r\n    credentials: 'include',\r\n  };\r\n  return await fetch(`/auth/logout`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: 'Unable to connect to server. Please try again' },\r\n    }));\r\n};\r\n\r\nexport default logout;\r\n","import { useState, useContext, createContext, FunctionComponent, useEffect, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthApiData, AuthApiDataSuccess } from '../interface/AuthApiData';\r\nimport { User } from '../interface/User';\r\nimport loginWithCookies from '../helpers/APICalls/loginWithCookies';\r\nimport logoutAPI from '../helpers/APICalls/logout';\r\n\r\ninterface IAuthContext {\r\n  loggedInUser: User | null | undefined;\r\n  updateLoginContext: (data: AuthApiDataSuccess) => void;\r\n  logout: () => void;\r\n}\r\n\r\nexport const AuthContext = createContext<IAuthContext>({\r\n  loggedInUser: undefined,\r\n  updateLoginContext: () => null,\r\n  logout: () => null,\r\n});\r\n\r\nexport const AuthProvider: FunctionComponent = ({ children }): JSX.Element => {\r\n  // default undefined before loading, once loaded provide user or null if logged out\r\n  const [loggedInUser, setLoggedInUser] = useState<User | null | undefined>();\r\n  const history = useHistory();\r\n\r\n  const updateLoginContext = useCallback(\r\n    (data: AuthApiDataSuccess) => {\r\n      setLoggedInUser(data.user);\r\n      history.push('/dashboard');\r\n    },\r\n    [history],\r\n  );\r\n\r\n  const logout = useCallback(async () => {\r\n    // needed to remove token cookie\r\n    await logoutAPI()\r\n      .then(() => {\r\n        history.push('/login');\r\n        setLoggedInUser(null);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, [history]);\r\n\r\n  // use our cookies to check if we can login straight away\r\n  useEffect(() => {\r\n    const checkLoginWithCookies = async () => {\r\n      await loginWithCookies().then((data: AuthApiData) => {\r\n        if (data.success) {\r\n          updateLoginContext(data.success);\r\n          history.push('/dashboard');\r\n        } else {\r\n          // don't need to provide error feedback as this just means user doesn't have saved cookies or the cookies have not been authenticated on the backend\r\n          setLoggedInUser(null);\r\n          history.push('/login');\r\n        }\r\n      });\r\n    };\r\n    checkLoginWithCookies();\r\n  }, [updateLoginContext, history]);\r\n\r\n  return <AuthContext.Provider value={{ loggedInUser, updateLoginContext, logout }}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport function useAuth(): IAuthContext {\r\n  return useContext(AuthContext);\r\n}\r\n","import { useState, useContext, createContext, FunctionComponent, SyntheticEvent, useCallback } from 'react';\r\nimport Snackbar, { SnackbarCloseReason } from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\ninterface ISnackBarContext {\r\n  updateSnackBarMessage: (message: string) => void;\r\n}\r\n\r\nexport const SnackBarContext = createContext<ISnackBarContext>({\r\n  updateSnackBarMessage: () => null,\r\n});\r\n\r\nexport const SnackBarProvider: FunctionComponent = ({ children }): JSX.Element => {\r\n  const [message, setMessage] = useState<string | null>(null);\r\n  const [open, setOpen] = useState<boolean>(false);\r\n\r\n  const updateSnackBarMessage = useCallback((message: string) => {\r\n    setMessage(message);\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  const snackbarHandleClose = useCallback((event: SyntheticEvent, reason: SnackbarCloseReason) => {\r\n    if (reason === 'clickaway') return;\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  return (\r\n    <SnackBarContext.Provider value={{ updateSnackBarMessage }}>\r\n      {children}\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={snackbarHandleClose}\r\n        message={message}\r\n        action={\r\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n            <CloseIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        }\r\n      />\r\n    </SnackBarContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useSnackBar(): ISnackBarContext {\r\n  return useContext(SnackBarContext);\r\n}\r\n","import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { FormikHelpers } from 'formik';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './useStyles';\r\nimport login from '../../helpers/APICalls/login';\r\nimport LoginForm from './LoginForm/LoginForm';\r\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\r\nimport { useAuth } from '../../context/useAuthContext';\r\nimport { useSnackBar } from '../../context/useSnackbarContext';\r\n\r\nexport default function Login(): JSX.Element {\r\n  const classes = useStyles();\r\n  const { updateLoginContext } = useAuth();\r\n  const { updateSnackBarMessage } = useSnackBar();\r\n\r\n  const handleSubmit = (\r\n    { email, password }: { email: string; password: string },\r\n    { setSubmitting }: FormikHelpers<{ email: string; password: string }>,\r\n  ) => {\r\n    login(email, password).then((data) => {\r\n      if (data.error) {\r\n        setSubmitting(false);\r\n        updateSnackBarMessage(data.error.message);\r\n      } else if (data.success) {\r\n        updateLoginContext(data.success);\r\n      } else {\r\n        // should not get here from backend but this catch is for an unknown issue\r\n        console.error({ data });\r\n\r\n        setSubmitting(false);\r\n        updateSnackBarMessage('An unexpected error occurred. Please try again');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={12} component={Paper} square>\r\n        <Box className={classes.authWrapper}>\r\n          <Box width=\"100%\" maxWidth={450} p={3} alignSelf=\"center\">\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Typography className={classes.welcome} component=\"h1\" variant=\"h5\">\r\n                  Welcome back!\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <LoginForm handleSubmit={handleSubmit} />\r\n            <AuthHeader linkTo=\"/signup\" asideText=\"Don't have an account?\" btnText=\"Create account\" />\r\n          </Box>\r\n          <Box p={1} alignSelf=\"center\" />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    minHeight: '100vh',\r\n    '& .MuiInput-underline:before': {\r\n      borderBottom: '1.2px solid rgba(0, 0, 0, 0.2)',\r\n    },\r\n  },\r\n  authWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    minWidth: '100vw',\r\n    minHeight: '100vh',\r\n    justifyContent: 'space-around',\r\n    flexDirection: 'column',\r\n    paddingTop: 23,\r\n  },\r\n  welcome: {\r\n    fontSize: 32,\r\n    paddingBottom: 20,\r\n    color: '#000000',\r\n    fontFamily: 'Poppins-Bold',\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { AuthApiData } from '../../interface/AuthApiData';\r\nimport { FetchOptions } from '../../interface/FetchOptions';\r\n\r\nconst register = async (username: string, email: string, password: string): Promise<AuthApiData> => {\r\n  const fetchOptions: FetchOptions = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ username, email, password }),\r\n    credentials: 'include',\r\n  };\r\n  return await fetch(`/auth/register`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: 'Unable to connect to server. Please try again' },\r\n    }));\r\n};\r\n\r\nexport default register;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n    paddingLeft: '5px',\r\n    textTransform: 'uppercase',\r\n    color: 'black',\r\n    fontFamily: 'Poppins-Bold',\r\n  },\r\n  inputs: {\r\n    marginTop: '.8rem',\r\n    height: '2rem',\r\n    padding: '5px',\r\n    fontFamily: 'Poppins-Regular',\r\n    border: '1px solid rgba(0,0,0,0.2)',\r\n    borderRadius: '5px',\r\n  },\r\n  submit: {\r\n    padding: 10,\r\n    width: 160,\r\n    height: 56,\r\n    borderRadius: theme.shape.borderRadius,\r\n    marginTop: 49,\r\n    fontSize: 14,\r\n    backgroundColor: 'rgb(240, 69, 69)',\r\n    color: 'white',\r\n    textTransform: 'uppercase',\r\n    fontFamily: 'Poppins-Regular',\r\n    letterSpacing: 1.1,\r\n  },\r\n  demoSubmit: {\r\n    margin: theme.spacing(1, 2, 2),\r\n    padding: 10,\r\n    width: 160,\r\n    height: 56,\r\n    borderRadius: theme.shape.borderRadius,\r\n    marginTop: 49,\r\n    fontSize: 14,\r\n    backgroundColor: 'rgb(240, 69, 69)',\r\n    color: 'white',\r\n    textTransform: 'uppercase',\r\n    fontFamily: 'Poppins-Regular',\r\n    letterSpacing: 1.1,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Formik, FormikHelpers } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './useStyles';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\ninterface Props {\r\n  handleSubmit: (\r\n    {\r\n      username,\r\n      email,\r\n      password,\r\n    }: {\r\n      email: string;\r\n      password: string;\r\n      username: string;\r\n    },\r\n    {\r\n      setStatus,\r\n      setSubmitting,\r\n    }: FormikHelpers<{\r\n      email: string;\r\n      password: string;\r\n      username: string;\r\n    }>,\r\n  ) => void;\r\n}\r\n\r\nconst SignUpForm = ({ handleSubmit }: Props): JSX.Element => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: '',\r\n        username: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        username: Yup.string().required('Username is required').max(40, 'Username is too long'),\r\n        email: Yup.string().required('Email is required').email('Email is not valid'),\r\n        password: Yup.string()\r\n          .required('Password is required')\r\n          .max(100, 'Password is too long')\r\n          .min(6, 'Password too short'),\r\n      })}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <TextField\r\n            id=\"email\"\r\n            label={<Typography className={classes.label}>Email address</Typography>}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            placeholder={'Your email'}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n              classes: { input: classes.inputs },\r\n              disableUnderline: true,\r\n            }}\r\n            autoFocus\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            helperText={touched.email ? errors.email : ''}\r\n            error={touched.email && Boolean(errors.email)}\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            id=\"username\"\r\n            label={<Typography className={classes.label}>name</Typography>}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            placeholder={'Your name'}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n              classes: { input: classes.inputs },\r\n              disableUnderline: true,\r\n            }}\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            helperText={touched.username ? errors.username : ''}\r\n            error={touched.username && Boolean(errors.username)}\r\n            value={values.username}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            id=\"password\"\r\n            label={<Typography className={classes.label}>Password</Typography>}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            placeholder={'Create a password'}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n              classes: { input: classes.inputs },\r\n              disableUnderline: true,\r\n            }}\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            helperText={touched.password ? errors.password : ''}\r\n            error={touched.password && Boolean(errors.password)}\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <Box textAlign=\"center\">\r\n            <Button type=\"submit\" size=\"large\" color=\"secondary\" variant=\"contained\" className={classes.submit}>\r\n              {isSubmitting ? <CircularProgress style={{ color: 'white' }} /> : 'sign up'}\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { FormikHelpers } from 'formik';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './useStyles';\r\nimport register from '../../helpers/APICalls/register';\r\nimport SignUpForm from './SignUpForm/SignUpForm';\r\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\r\nimport { useAuth } from '../../context/useAuthContext';\r\nimport { useSnackBar } from '../../context/useSnackbarContext';\r\n\r\nexport default function Register(): JSX.Element {\r\n  const classes = useStyles();\r\n  const { updateLoginContext } = useAuth();\r\n  const { updateSnackBarMessage } = useSnackBar();\r\n\r\n  const handleSubmit = (\r\n    { username, email, password }: { email: string; password: string; username: string },\r\n    { setSubmitting }: FormikHelpers<{ email: string; password: string; username: string }>,\r\n  ) => {\r\n    register(username, email, password).then((data) => {\r\n      if (data.error) {\r\n        console.error({ error: data.error.message });\r\n        setSubmitting(false);\r\n        updateSnackBarMessage(data.error.message);\r\n      } else if (data.success) {\r\n        updateLoginContext(data.success);\r\n      } else {\r\n        // should not get here from backend but this catch is for an unknown issue\r\n        console.error({ data });\r\n\r\n        setSubmitting(false);\r\n        updateSnackBarMessage('An unexpected error occurred. Please try again');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={12} component={Paper} square>\r\n        <Box className={classes.authWrapper}>\r\n          <Box width=\"100%\" maxWidth={450} p={3} alignSelf=\"center\">\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Typography className={classes.welcome} component=\"h1\" variant=\"h5\">\r\n                  Sign up\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <SignUpForm handleSubmit={handleSubmit} />\r\n            <AuthHeader linkTo=\"/login\" asideText=\"Already a member?\" btnText=\"Login\" />\r\n          </Box>\r\n          <Box p={1} alignSelf=\"center\" />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: '100vh',\r\n    '& .MuiInput-underline:before': {\r\n      borderBottom: '1.2px solid rgba(0, 0, 0, 0.2)',\r\n    },\r\n  },\r\n  dashboard: { backgroundColor: '#FFFFFF' },\r\n  drawerWrapper: {\r\n    width: drawerWidth,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '300px',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { useState, useContext, createContext, FunctionComponent, useCallback } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\ninterface ISocketContext {\r\n  socket: Socket | undefined;\r\n  initSocket: () => void;\r\n}\r\n\r\nexport const SocketContext = createContext<ISocketContext>({\r\n  socket: undefined,\r\n  initSocket: () => null,\r\n});\r\n\r\nexport const SocketProvider: FunctionComponent = ({ children }): JSX.Element => {\r\n  const [socket, setSocket] = useState<Socket | undefined>(undefined);\r\n\r\n  const initSocket = useCallback(() => {\r\n    console.log('trying to connect');\r\n    setSocket(\r\n      io('/', {\r\n        withCredentials: true,\r\n      }),\r\n    );\r\n  }, []);\r\n\r\n  return <SocketContext.Provider value={{ socket, initSocket }}>{children}</SocketContext.Provider>;\r\n};\r\n\r\nexport function useSocket(): ISocketContext {\r\n  return useContext(SocketContext);\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chatSideBanner: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100vh',\r\n    padding: '1rem 1rem',\r\n    width: drawerWidth,\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: '2rem 2rem',\r\n      width: '300px',\r\n    },\r\n  },\r\n  userPanel: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: '2rem',\r\n  },\r\n  userText: {\r\n    fontWeight: 700,\r\n    paddingLeft: '1rem',\r\n    fontSize: 16,\r\n  },\r\n  chatTitle: {\r\n    fontWeight: 700,\r\n    fontSize: 20,\r\n    margin: '1rem 0',\r\n  },\r\n  chatSummaryContainer: { overflowY: 'auto', marginTop: '1rem' },\r\n  newChatBtn: {\r\n    margin: '1rem 0',\r\n  },\r\n  noChatToSelectText: {\r\n    margin: '1rem 0',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Avatar from '@material-ui/core/Avatar';\r\nimport { User } from '../../interface/User';\r\n\r\ninterface Props {\r\n  loggedIn: boolean;\r\n  user: User;\r\n}\r\n\r\nconst AvatarDisplay = ({ user }: Props): JSX.Element => {\r\n  return <Avatar alt=\"Profile Image\" src={`https://robohash.org/${user.email}.png`} />;\r\n};\r\n\r\nexport default AvatarDisplay;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: '#E9EEF9',\r\n    marginLeft: 0,\r\n    height: '50px',\r\n    lineHeight: '18px',\r\n\r\n    width: `calc(${drawerWidth} - 2rem)`,\r\n  },\r\n  searchRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  searchInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    width: '100%',\r\n    fontWeight: 600,\r\n  },\r\n  searchIcon: {\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    marginLeft: '1rem',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { FetchOptions } from '../../interface/FetchOptions';\r\nimport { SearchUsersApiData } from '../../interface/User';\r\n\r\ninterface Props {\r\n  search: string;\r\n}\r\n\r\nexport async function searchUsers({ search }: Props): Promise<SearchUsersApiData> {\r\n  const fetchOptions: FetchOptions = {\r\n    method: 'GET',\r\n    credentials: 'include',\r\n  };\r\n  return await fetch(`/users?search=${search}`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: 'Unable to connect to server. Please try again' },\r\n    }));\r\n}\r\n","import { ChangeEvent, useState, useEffect, SyntheticEvent } from 'react';\r\nimport useStyles from './useStyles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { User } from '../../interface/User';\r\nimport { useDebounce } from 'use-debounce';\r\nimport { searchUsers } from '../../helpers/APICalls/searchUsers';\r\n\r\ninterface Props {\r\n  search: string;\r\n  handleChange: (event: ChangeEvent<HTMLInputElement>, newInputValue: string) => void;\r\n}\r\nconst Search = ({ search, handleChange }: Props): JSX.Element => {\r\n  const [open, setOpen] = useState(false);\r\n  const [options, setOptions] = useState<User[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  // limit our call to the api with a debounced value at max of 1 per 0.5 seconds\r\n  const [debouncedSearch] = useDebounce(search, 500);\r\n\r\n  const classes = useStyles();\r\n\r\n  const saveOptions = (users: User[]) => {\r\n    setOptions(users);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    async function searchAndSaveUsers() {\r\n      // send request to backend API to get users limited to 20.\r\n      setLoading(true);\r\n      const response = await searchUsers({\r\n        search: debouncedSearch,\r\n      });\r\n\r\n      if (active && response && response.users) {\r\n        console.log(response);\r\n        saveOptions(response.users);\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    searchAndSaveUsers();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [debouncedSearch]);\r\n\r\n  // creates a combobox search which is dynamically updated with call's to the API\r\n  return (\r\n    <form\r\n      onSubmit={(e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <Autocomplete\r\n        id=\"asynchronous-search\"\r\n        open={open}\r\n        onOpen={() => {\r\n          setOpen(true);\r\n        }}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        getOptionSelected={(option, value) => option.username === value.username}\r\n        getOptionLabel={(option) => option.username}\r\n        options={options}\r\n        loading={loading}\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        onInputChange={handleChange}\r\n        inputValue={search}\r\n        noOptionsText=\"No Users Found\"\r\n        freeSolo\r\n        renderInput={(params) => (\r\n          <div className={classes.search}>\r\n            <InputBase\r\n              {...params.inputProps}\r\n              placeholder=\"Search\"\r\n              classes={{\r\n                root: classes.searchRoot,\r\n                input: classes.searchInput,\r\n              }}\r\n              inputProps={{\r\n                'aria-label': 'search',\r\n                ref: params.InputProps.ref,\r\n              }}\r\n              startAdornment={\r\n                <div className={classes.searchIcon}>\r\n                  <SearchIcon />\r\n                </div>\r\n              }\r\n            />\r\n          </div>\r\n        )}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useState, MouseEvent } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { useAuth } from '../../context/useAuthContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AuthMenu = (): JSX.Element => {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const { logout } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const handleClick = (event: MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    handleClose();\r\n    logout();\r\n  };\r\n\r\n  const handleBookings = () => {\r\n    history.push('/bookings');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton aria-label=\"show auth menu\" aria-controls=\"auth-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        <MoreHorizIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"auth-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        getContentAnchorEl={null}\r\n      >\r\n        <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n        <MenuItem onClick={handleBookings}>Bookings</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthMenu;\r\n","import { ChangeEvent, useState } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './useStyles';\r\nimport { User } from '../../interface/User';\r\nimport AvatarDisplay from '../AvatarDisplay/AvatarDisplay';\r\nimport Search from '../Search/Search';\r\nimport AuthMenu from '../AuthMenu/AuthMenu';\r\n\r\ninterface Props {\r\n  loggedInUser: User;\r\n  handleDrawerToggle?: () => void;\r\n}\r\n\r\nconst ChatSideBanner = ({ loggedInUser }: Props): JSX.Element => {\r\n  const [search, setSearch] = useState<string>('test');\r\n  const [newChatUser, setNewChatUser] = useState<User | null>(null);\r\n  const classes = useStyles();\r\n\r\n  // React.FormEvent<FormControl & FormControlProps>)\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>, newInputValue: string) => {\r\n    setSearch(newInputValue);\r\n    if (newChatUser) {\r\n      setNewChatUser(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.chatSideBanner}>\r\n      <Box className={classes.userPanel}>\r\n        <AvatarDisplay loggedIn user={loggedInUser} />\r\n        <Typography className={classes.userText} variant=\"h5\">\r\n          {loggedInUser.username}\r\n        </Typography>\r\n        <AuthMenu />\r\n      </Box>\r\n      <Box>\r\n        <Typography className={classes.chatTitle} variant=\"h5\">\r\n          Users\r\n        </Typography>\r\n        <Search search={search} handleChange={handleChange} />\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChatSideBanner;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport useStyles from './useStyles';\r\nimport { useAuth } from '../../context/useAuthContext';\r\nimport { useSocket } from '../../context/useSocketContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ChatSideBanner from '../../components/ChatSideBanner/ChatSideBanner';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function Dashboard(): JSX.Element {\r\n  const classes = useStyles();\r\n\r\n  const { loggedInUser } = useAuth();\r\n  const { initSocket } = useSocket();\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    initSocket();\r\n  }, [initSocket]);\r\n\r\n  if (loggedInUser === undefined) return <CircularProgress />;\r\n  if (!loggedInUser) {\r\n    history.push('/login');\r\n    // loading for a split seconds until history.push works\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={`${classes.root} ${classes.dashboard}`}>\r\n      <CssBaseline />\r\n      <Grid item className={classes.drawerWrapper}>\r\n        <ChatSideBanner loggedInUser={loggedInUser} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    minWidth: '100vw',\r\n  },\r\n  bookingsWrapper: {\r\n    backgroundColor: 'rgb(250, 250, 250)',\r\n  },\r\n  bookingsList: {\r\n    padding: '5% 3% 0 3%',\r\n    display: 'flex',\r\n    alignItems: 'flex-end',\r\n  },\r\n  bookingsCardNext: {\r\n    width: '320px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  bookingsCardContainer: {\r\n    maxHeight: '80vh',\r\n    width: '320px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  scrollableBox: {\r\n    paddingRight: '3px',\r\n    overflowY: 'scroll',\r\n    '&::-webkit-scrollbar': {\r\n      width: '4px',\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      borderRadius: '3px',\r\n      height: '50px',\r\n      backgroundColor: 'rgba(168, 168, 168, 0.7)',\r\n    },\r\n  },\r\n  bookingsCardItem: {\r\n    alignItems: 'unset',\r\n    width: '280px',\r\n    height: '86px',\r\n    marginBottom: '8px',\r\n  },\r\n  bookingsCardContent: {\r\n    padding: '8px 8px 0 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  iconSettings: {\r\n    fill: 'rgba(0,0,0,0.2)',\r\n    height: '15px',\r\n    cursor: 'pointer',\r\n  },\r\n  typographyCurrent: {\r\n    fontWeight: 900,\r\n    fontSize: '10px',\r\n    padding: '10px 0 10px 16px',\r\n    alignSelf: 'start',\r\n  },\r\n  typographyPast: {\r\n    fontWeight: 900,\r\n    fontSize: '10px',\r\n    padding: '10px 0 10px 0',\r\n    alignSelf: 'start',\r\n  },\r\n  bookingsCalendar: {\r\n    padding: '5% 3% 0 3%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  calendarContainer: {\r\n    width: '500px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '& .MuiTypography-body1': {\r\n      color: 'rgb(240, 69, 69)',\r\n      fontWeight: '400',\r\n    },\r\n    '& .MuiPickersDay-day': {\r\n      padding: '0 20px',\r\n    },\r\n    '& .MuiPickersDay-daySelected': {\r\n      backgroundColor: 'unset',\r\n      color: 'unset',\r\n    },\r\n    '& .MuiPickersDay-daySelected:hover': {\r\n      backgroundColor: 'rgb(245, 245, 245)',\r\n      color: 'unset',\r\n    },\r\n    '& .MuiTypography-caption': {\r\n      padding: '20px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      color: 'rgba(0,0,0,0.2)',\r\n    },\r\n  },\r\n  iconStatus: {\r\n    '& .MuiCardHeader-action': {\r\n      color: 'rgba(0,0,0,0.4)',\r\n      fontSize: '10px',\r\n      fontWeight: '900',\r\n    },\r\n  },\r\n  customSelectedDay: {\r\n    '& button': {\r\n      backgroundColor: 'rgb(240, 69, 69)',\r\n      color: 'white',\r\n    },\r\n    '& button:hover': {\r\n      backgroundColor: 'rgb(240, 69, 69)',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { ReqValue } from '../../interface/Request';\r\n\r\nexport const getRequests = async (): Promise<ReqValue[]> => {\r\n  return await fetch('/requests/sitter', {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    credentials: 'include',\r\n  })\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: 'Unable to get requests. Please try again' },\r\n    }));\r\n};\r\n\r\nexport const updateReqs = async (reqId: string, status: string): Promise<ReqValue> => {\r\n  return await fetch('/requests', {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      reqId: reqId,\r\n      accepted: status,\r\n    }),\r\n    credentials: 'include',\r\n  })\r\n    .then((res) => res.json())\r\n    .catch(() => ({\r\n      error: { message: 'Unable to update request. Please try again' },\r\n    }));\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  iconSettings: {\r\n    fill: 'rgba(0,0,0,0.2)',\r\n    height: '15px',\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import useStyles from './useStyles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Settings from '@material-ui/icons/Settings';\r\nimport { useState, MouseEvent } from 'react';\r\nimport { getRequests, updateReqs } from '../../helpers/APICalls/requests';\r\nimport { ReqValue } from '../../interface/Request';\r\nimport { Dispatch, SetStateAction } from 'react';\r\n\r\ntype MenuProps = {\r\n  ind: number | string;\r\n  eleId: string;\r\n  setDateReqs: Dispatch<SetStateAction<ReqValue[]>>;\r\n  setNextReq: Dispatch<SetStateAction<ReqValue>>;\r\n  selectedDate: Date;\r\n};\r\n\r\nconst RequestMenu = ({ ind, eleId, setDateReqs, selectedDate, setNextReq }: MenuProps): JSX.Element => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState<SVGSVGElement | null>(null);\r\n\r\n  const handleUpdate = (reqId: string, status: string) => {\r\n    updateReqs(reqId, status);\r\n    setAnchorEl(null);\r\n    getRequests().then((data) => {\r\n      if (data) {\r\n        setDateReqs(data);\r\n        const nearestReq = data.find((ele) => new Date(ele.start).getTime() >= selectedDate.getTime() && ele.accepted);\r\n        nearestReq && setNextReq(nearestReq);\r\n      }\r\n    });\r\n  };\r\n\r\n  const openMenu = (evnt: MouseEvent<SVGSVGElement>) => {\r\n    setAnchorEl(evnt.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Settings focusable key={ind} className={classes.iconSettings} onClick={openMenu} />\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        getContentAnchorEl={null}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={() => handleUpdate(eleId, 'accepted')}>Accept</MenuItem>\r\n        <MenuItem onClick={() => handleUpdate(eleId, 'declined')}>Deny</MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestMenu;\r\n","import useStyles from './useStyles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Settings from '@material-ui/icons/Settings';\r\nimport Box from '@material-ui/core/Box';\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { ReactElement, useEffect, useState } from 'react';\r\nimport { ReqValue } from '../../interface/Request';\r\nimport { getRequests } from '../../helpers/APICalls/requests';\r\nimport RequestMenu from '../../components/RequestMenu/RequestMenu';\r\n\r\nexport default function Bookings(): JSX.Element {\r\n  const classes = useStyles();\r\n  const [selectedDate, handleDateChange] = useState<Date>(new Date());\r\n  const [dateReqs, setDateReqs] = useState(new Array<ReqValue>());\r\n  const [nextReq, setNextReq] = useState<ReqValue>({\r\n    _id: '-',\r\n    user: {\r\n      username: 'No Accepted Requests',\r\n      _id: '-',\r\n    },\r\n    sitterId: '-',\r\n    accepted: false,\r\n    declined: false,\r\n    dogType: '-',\r\n    end: new Date(),\r\n    paid: false,\r\n    specialNotes: '-',\r\n    start: new Date(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    getRequests().then((data) => {\r\n      if (data) {\r\n        setDateReqs(data);\r\n        const nearestReq = data.find((ele) => new Date(ele.start).getTime() >= selectedDate.getTime() && ele.accepted);\r\n        nearestReq && setNextReq(nearestReq);\r\n      }\r\n    });\r\n  }, [selectedDate]);\r\n\r\n  const renderDayCalendar = (\r\n    day: Date | null,\r\n    selectedDay: Date | null,\r\n    currentMonth: boolean,\r\n    DayComponent: ReactElement,\r\n  ) => {\r\n    const days = day ? day.getTime() : null;\r\n    const stateDays = dateReqs.filter((el) => el.accepted).map((el) => new Date(el.start).getTime());\r\n    if (days === stateDays.find((el) => el === days && days >= selectedDate.getTime())) {\r\n      return <div className={classes.customSelectedDay}>{DayComponent}</div>;\r\n    }\r\n    return DayComponent;\r\n  };\r\n\r\n  return (\r\n    <Grid container className={`${classes.root}`}>\r\n      <Grid xs={12} item className={classes.bookingsWrapper} container>\r\n        <Grid item xs={5} className={classes.bookingsList} container direction={'column'} spacing={1}>\r\n          <Grid item>\r\n            {nextReq && (\r\n              <Card key={nextReq._id} elevation={2} className={classes.bookingsCardNext}>\r\n                <Typography className={classes.typographyCurrent}>YOUR NEXT BOOKING:</Typography>\r\n                <CardContent className={classes.bookingsCardContent}>\r\n                  <Typography variant={'h6'} noWrap display={'inline'}>\r\n                    {new Date(nextReq.start).toDateString()}\r\n                  </Typography>\r\n                  <RequestMenu\r\n                    ind={nextReq._id}\r\n                    eleId={nextReq._id}\r\n                    setDateReqs={setDateReqs}\r\n                    selectedDate={selectedDate}\r\n                    setNextReq={setNextReq}\r\n                  />\r\n                </CardContent>\r\n                <CardHeader className={classes.iconStatus} avatar={'avatar'} title={`${nextReq.user.username}`} />\r\n              </Card>\r\n            )}\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Card elevation={2} className={classes.bookingsCardContainer}>\r\n              <Box className={classes.scrollableBox}>\r\n                <Typography className={classes.typographyPast}>CURRENT BOOKINGS:</Typography>\r\n                {!!dateReqs.length &&\r\n                  dateReqs.map((ele, ind) =>\r\n                    selectedDate.getTime() < new Date(ele.start).getTime() ? (\r\n                      <Card key={ele._id} variant={'outlined'} className={classes.bookingsCardItem}>\r\n                        <CardContent className={classes.bookingsCardContent}>\r\n                          <Typography variant={'h6'} noWrap display={'inline'}>\r\n                            {new Date(ele.start).toDateString()}\r\n                          </Typography>\r\n                          <RequestMenu\r\n                            ind={ind}\r\n                            eleId={ele._id}\r\n                            setDateReqs={setDateReqs}\r\n                            selectedDate={selectedDate}\r\n                            setNextReq={setNextReq}\r\n                          />\r\n                        </CardContent>\r\n                        <CardHeader\r\n                          className={classes.iconStatus}\r\n                          avatar={'avatar'}\r\n                          title={`${ele.user.username}`}\r\n                          action={ele.accepted ? 'ACCEPTED' : ele.declined ? 'DECLINED' : 'PENDING'}\r\n                        />\r\n                      </Card>\r\n                    ) : null,\r\n                  )}\r\n\r\n                <Typography className={classes.typographyPast}>PAST BOOKINGS:</Typography>\r\n                {!!dateReqs.length &&\r\n                  dateReqs.map((ele) =>\r\n                    new Date(ele.start).getTime() < selectedDate.getTime() ? (\r\n                      <Card key={ele._id} variant={'outlined'} className={classes.bookingsCardItem}>\r\n                        <CardContent className={classes.bookingsCardContent}>\r\n                          <Typography variant={'h6'} noWrap display={'inline'}>\r\n                            {new Date(ele.start).toDateString()}\r\n                          </Typography>\r\n                          <Settings className={classes.iconSettings} />\r\n                        </CardContent>\r\n                        <CardHeader\r\n                          className={classes.iconStatus}\r\n                          avatar={'avatar'}\r\n                          title={`${ele.user.username}`}\r\n                          action={ele.accepted ? 'ACCEPTED' : ele.declined ? 'DECLINED' : 'PENDING'}\r\n                        />\r\n                      </Card>\r\n                    ) : null,\r\n                  )}\r\n              </Box>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={7} className={classes.bookingsCalendar} direction={'column'} container>\r\n          <Paper elevation={2} className={classes.calendarContainer}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              {dateReqs.length ? (\r\n                <DatePicker\r\n                  autoOk\r\n                  disableToolbar\r\n                  orientation=\"landscape\"\r\n                  variant=\"static\"\r\n                  value={selectedDate}\r\n                  disabled\r\n                  renderDay={(day, selectedDay, currentMonth, DayComponent) =>\r\n                    renderDayCalendar(day, selectedDay, currentMonth, DayComponent)\r\n                  }\r\n                  onChange={() => handleDateChange(new Date())}\r\n                />\r\n              ) : (\r\n                <DatePicker\r\n                  autoOk\r\n                  disableToolbar\r\n                  orientation=\"landscape\"\r\n                  variant=\"static\"\r\n                  value={selectedDate}\r\n                  disabled\r\n                  onChange={() => handleDateChange(new Date())}\r\n                />\r\n              )}\r\n            </MuiPickersUtilsProvider>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { MuiThemeProvider } from '@material-ui/core';\r\nimport { theme } from './themes/theme';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\nimport Login from './pages/Login/Login';\r\nimport Signup from './pages/SignUp/SignUp';\r\nimport Dashboard from './pages/Dashboard/Dashboard';\r\nimport Bookings from './pages/Bookings/Bookings';\r\nimport { AuthProvider } from './context/useAuthContext';\r\nimport { SocketProvider } from './context/useSocketContext';\r\nimport { SnackBarProvider } from './context/useSnackbarContext';\r\n\r\nimport './App.css';\r\n\r\nfunction App(): JSX.Element {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        <SnackBarProvider>\r\n          <AuthProvider>\r\n            <SocketProvider>\r\n              <Switch>\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/signup\" component={Signup} />\r\n                <Route exact path=\"/dashboard\">\r\n                  <Dashboard />\r\n                </Route>\r\n                <Route exact path=\"/bookings\">\r\n                  <Bookings />\r\n                </Route>\r\n                <Route path=\"*\">\r\n                  <Redirect to=\"/login\" />\r\n                </Route>\r\n              </Switch>\r\n            </SocketProvider>\r\n          </AuthProvider>\r\n        </SnackBarProvider>\r\n      </BrowserRouter>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}